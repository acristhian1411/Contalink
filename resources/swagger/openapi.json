{
  "openapi": "3.0.0",
  "info": {
    "title": "Expenses API",
    "version": "1.0.0",
    "description": "An API for managing expenses",
    "contact":{
      "name":"API Support",
      "url":"http://www.example.com/support",
      "email":"N6wY7@example.com"
    }
  },
  "components":{
    
    "schemas": {
      "Categories": {
        "type": "object",
        "properties": {
          "cat_desc": {
            "type": "string"
          }
        }
      },
      "Countries": {
        "type": "object",
        "properties": {
          "country_name": {
            "type": "string"
          },
          "country_code": {
            "type": "string"
          }
        }
      },
      "States": {
        "type": "object",
        "properties": {
          "country_id": {
            "type": "number"
          },
          "state_name": {
            "type": "string"
          }
        }
      },
      "Cities": {
        "type": "object",
        "properties": {
          "state_id": {
            "type": "number"
          },
          "city_name": {
            "type": "string"
          },
          "city_code": {
            "type": "string"
          }
        }
      }
    }
  },
  "tags":[
    {
      "name": "Categories",
      "description": "Manage Categories"
    },
    {
      "name": "Countries",
      "description": "Manage countries"
    },
    {
      "name": "States",
      "description": "Manage States"
    },
    {
      "name": "Cities",
      "description": "Manage Cities"
    }
  ],
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Local server"
    }
  ],
  "paths": {
    "/api/categories": {
      "get": {
        "summary": "Lists all the Categories",
        "tags": ["Categories"],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "The page"
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer"
            },
            "description": "The quantity of results per page"
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "type": "string"
            },
            "description": "The field by sort"
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string"
            },
            "description": "The direction of the sort"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of the Categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Categories"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new category",
        "tags": ["Categories"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Categories"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created category.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Categories"
                }
              }
            }
          },
          "500": {
            "description": "Some server error"
          }
        }
      }
    },
    "/api/categories/{id}": {
      "get": {
        "summary": "Get the category by id",
        "tags": ["Categories"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The category id"
          }
        ],
        "responses": {
          "200": {
            "description": "The category response by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Categories"
                }
              }
            }
          },
          "404": {
            "description": "The category was not found"
          }
        }
      },
      "put": {
        "summary": "Update the category by the id",
        "tags": ["Categories"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The category id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Categories"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The category was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Categories"
                }
              }
            }
          },
          "404": {
            "description": "The category was not found"
          },
          "500": {
            "description": "Some error happened"
          }
        }
      },
      "delete": {
        "summary": "Remove the category by id",
        "tags": ["Categories"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The category id"
          }
        ],
        "responses": {
          "200": {
            "description": "The category was deleted"
          },
          "404": {
            "description": "The category was not found"
          }
        }
      }
    },
  "/api/countries": {
    "get": {
      "summary": "Lists all the Countries",
      "tags": ["Countries"],
      "parameters": [
        {
          "in": "query",
          "name": "page",
          "schema": {
            "type": "integer"
          },
          "description": "The page"
        },
        {
          "in": "query",
          "name": "per_page",
          "schema": {
            "type": "integer"
          },
          "description": "The quantity of results per page"
        },
        {
          "in": "query",
          "name": "sort_by",
          "schema": {
            "type": "string"
          },
          "description": "The field by sort"
        },
        {
          "in": "query",
          "name": "order",
          "schema": {
            "type": "string"
          },
          "description": "The direction of the sort"
        }
      ],
      "responses": {
        "200": {
          "description": "The list of the Countries",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Countries"
                }
              }
            }
          }
        }
      }
    },
    "post": {
      "summary": "Create a new country",
      "tags": ["Countries"],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Countries"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "The created country.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Countries"
              }
            }
          }
        },
        "500": {
          "description": "Some server error"
        }
      }
    }
  },
  "/api/countries/{id}": {
    "get": {
      "summary": "Get the country by id",
      "tags": ["Countries"],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "The country id"
        }
      ],
      "responses": {
        "200": {
          "description": "The country response by id",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Countries"
              }
            }
          }
        },
        "404": {
          "description": "The country was not found"
        }
      }
    },
    "put": {
      "summary": "Update the country by the id",
      "tags": ["Countries"],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "The country id"
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Countries"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "The country was updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Countries"
              }
            }
          }
        },
        "404": {
          "description": "The country was not found"
        },
        "500": {
          "description": "Some error happened"
        }
      }
    },
    "delete": {
      "summary": "Remove the country by id",
      "tags": ["Countries"],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "The country id"
        }
      ],
      "responses": {
        "200": {
          "description": "The country was deleted"
        },
        "404": {
          "description": "The country was not found"
        }
      }
    }
  },
  "/api/states": {
    "get": {
      "summary": "Lists all the States",
      "tags": ["States"],
      "parameters": [
        {
          "in": "query",
          "name": "page",
          "schema": {
            "type": "integer"
          },
          "description": "The page"
        },
        {
          "in": "query",
          "name": "per_page",
          "schema": {
            "type": "integer"
          },
          "description": "The quantity of results per page"
        },
        {
          "in": "query",
          "name": "sort_by",
          "schema": {
            "type": "string"
          },
          "description": "The field by sort"
        },
        {
          "in": "query",
          "name": "order",
          "schema": {
            "type": "string"
          },
          "description": "The direction of the sort"
        }
      ],
      "responses": {
        "200": {
          "description": "The list of the States",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/States"
                }
              }
            }
          }
        }
      }
    },
    "post": {
      "summary": "Create a new state",
      "tags": ["States"],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/States"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "The created state.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/States"
              }
            }
          }
        },
        "500": {
          "description": "Some server error"
        }
      }
    }
  },
  "/api/states/{id}": {
    "get": {
      "summary": "Get the state by id",
      "tags": ["States"],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "The state id"
        }
      ],
      "responses": {
        "200": {
          "description": "The state response by id",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/States"
              }
            }
          }
        },
        "404": {
          "description": "The state was not found"
        }
      }
    },
    "put": {
      "summary": "Update the state by the id",
      "tags": ["States"],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "The state id"
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/States"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "The state was updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/States"
              }
            }
          }
        },
        "404": {
          "description": "The state was not found"
        },
        "500": {
          "description": "Some error happened"
        }
      }
    },
    "delete": {
      "summary": "Remove the state by id",
      "tags": ["States"],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "The state id"
        }
      ],
      "responses": {
        "200": {
          "description": "The state was deleted"
        },
        "404": {
          "description": "The state was not found"
        }
      }
    }
  },
  "/api/cities": {
    "get": {
      "summary": "Lists all the Cities",
      "tags": ["Cities"],
      "parameters": [
        {
          "in": "query",
          "name": "page",
          "schema": {
            "type": "integer"
          },
          "description": "The page"
        },
        {
          "in": "query",
          "name": "per_page",
          "schema": {
            "type": "integer"
          },
          "description": "The quantity of results per page"
        },
        {
          "in": "query",
          "name": "sort_by",
          "schema": {
            "type": "string"
          },
          "description": "The field by sort"
        },
        {
          "in": "query",
          "name": "order",
          "schema": {
            "type": "string"
          },
          "description": "The direction of the sort"
        }
      ],
      "responses": {
        "200": {
          "description": "The list of the Cities",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Cities"
                }
              }
            }
          }
        }
      }
    },
    "post": {
      "summary": "Create a new city",
      "tags": ["Cities"],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Cities"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "The created city.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Cities"
              }
            }
          }
        },
        "500": {
          "description": "Some server error"
        }
      }
    }
  },
  "/api/cities/{id}": {
    "get": {
      "summary": "Get the city by id",
      "tags": ["Cities"],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "The city id"
        }
      ],
      "responses": {
        "200": {
          "description": "The city response by id",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Cities"
              }
            }
          }
        },
        "404": {
          "description": "The city was not found"
        }
      }
    },
    "put": {
      "summary": "Update the city by the id",
      "tags": ["Cities"],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "The city id"
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Cities"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "The city was updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Cities"
              }
            }
          }
        },
        "404": {
          "description": "The city was not found"
        },
        "500": {
          "description": "Some error happened"
        }
      }
    },
    "delete": {
      "summary": "Remove the city by id",
      "tags": ["Cities"],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "The city id"
        }
      ],
      "responses": {
        "200": {
          "description": "The city was deleted"
        },
        "404": {
          "description": "The city was not found"
        }
      }
    }
  }
}
}
